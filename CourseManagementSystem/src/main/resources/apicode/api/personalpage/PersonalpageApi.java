/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package apicode.api.personalpage;

import essusys.coursemanagementsystem.demos.web.controller.ApiUtil;
import io.swagger.annotations.*;
import openapitools.model.InlineResponse200;
import openapitools.model.InlineResponse2001;
import openapitools.model.InlineResponse2002;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-12-20T21:44:39.267865700+08:00[Asia/Shanghai]")

@Validated
@Api(value = "personalpage", description = "the personalpage API")
public interface PersonalpageApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /personalpage/adm/{account} : 教务员个人主页读取
     *
     * @param account  (required)
     * @return  (status code 200)
     */
    @ApiOperation(value = "教务员个人主页读取", nickname = "personalpageAdmAccountGet", notes = "", response = InlineResponse2002.class, tags={ "个人主页（CYN）", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = InlineResponse2002.class) })
    @RequestMapping(value = "/personalpage/adm/{account}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse2002> personalpageAdmAccountGet(@ApiParam(value = "",required=true) @PathVariable("account") String account) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"adm_rank\" : -1803530559, \"adm_account\" : \"adm_account\", \"adm_tel\" : \"adm_tel\", \"adm_password\" : \"adm_password\", \"adm_name\" : \"adm_name\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /personalpage/stu/{account} : 学生个人主页读取
     *
     * @param account  (required)
     * @return  (status code 200)
     */
    @ApiOperation(value = "学生个人主页读取", nickname = "personalpageStuAccountGet", notes = "", response = InlineResponse2001.class, tags={ "个人主页（CYN）", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = InlineResponse2001.class) })
    @RequestMapping(value = "/personalpage/stu/{account}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse2001> personalpageStuAccountGet(@ApiParam(value = "",required=true) @PathVariable("account") String account) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"stu_grade\" : -1803530559, \"stu_sch\" : \"stu_sch\", \"stu_sex\" : \"男\", \"stu_name\" : \"stu_name\", \"stu_picture\" : \"stu_picture\", \"stu_password\" : \"stu_password\", \"stu_tel\" : \"stu_tel\", \"stu_account\" : \"stu_account\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /personalpage/tch/{account} : 教师个人主页读取
     *
     * @param account  (required)
     * @return  (status code 200)
     */
    @ApiOperation(value = "教师个人主页读取", nickname = "personalpageTchAccountGet", notes = "", response = InlineResponse200.class, tags={ "个人主页（CYN）", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = InlineResponse200.class) })
    @RequestMapping(value = "/personalpage/tch/{account}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse200> personalpageTchAccountGet(@ApiParam(value = "",required=true) @PathVariable("account") String account) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"tch_password\" : \"tch_password\", \"tch_name\" : \"tch_name\", \"tch_sex\" : \"男\", \"tch_sch\" : \"tch_sch\", \"tch_tel\" : \"tch_tel\", \"tch_picture\" : \"tch_picture\", \"tch_account\" : \"tch_account\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
