{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      user_id: \"\",\n      user_account: \"\",\n      cla_id: 0,\n      cou_name: \"\",\n      member_count: 0,\n      originalStudents: [],\n      // 用于存储初始状态的备份\n      students: [] // 用于动态存储后端返回的学生数据\n    };\n  },\n  created() {\n    // 从查询参数中获取 id 和账号\n    this.user_id = this.$route.query.user_id;\n    this.user_account = this.$route.query.user_account;\n    this.cla_id = this.$route.query.cla_id;\n    this.cou_name = this.$route.query.cou_name;\n\n    // 从后端获取学生数据\n    this.fetchStudents();\n  },\n  methods: {\n    goToTeacherGrade() {\n      this.$router.go(-1); // 返回上一页\n    },\n    // 从后端获取学生数据并过滤\n    fetchStudents() {\n      const body = {\n        claTchId: this.user_id\n      }; // 将 user_id 作为 claTchId 传递到后端\n      axios.post('http://localhost:8080/tch/studentGrade/conditionSearch2', body).then(response => {\n        const data = response.data;\n\n        // 过滤符合当前 cla_id 的学生\n        const filteredStudents = data.filter(item => item.claID === this.cla_id);\n\n        // 映射后端返回数据到表格格式\n        this.students = filteredStudents.map(item => ({\n          stu_id: item.scoStuId,\n          // 学号\n          stu_name: '',\n          // 姓名为空\n          sco_item_1: null,\n          // 评分项1为空\n          sco_item_2: null,\n          // 评分项2为空\n          sco_item_3: null,\n          // 评分项3为空\n          sco_item_4: null,\n          // 评分项4为空\n          sco_note: '',\n          // 备注为空\n          sco_score: 0 // 总分初始化为 0\n        }));\n        this.member_count = this.students.length; // 更新班级人数\n        this.originalStudents = this.students.map(student => ({\n          ...student\n        })); // 备份原始数据\n      }).catch(error => {\n        console.error('获取学生数据失败：', error);\n      });\n    },\n    // 计算每个学生的总分\n    calculateTotalScore(student) {\n      return (student.sco_item_1 || 0 + student.sco_item_2 || 0 + student.sco_item_3 || 0 + student.sco_item_4 || 0) / 4;\n    },\n    saveGrades() {\n      // 假设需要将学生成绩保存到后端\n      axios.post('http://localhost:8080/tch/studentGrade/saveGrades', this.students).then(() => {\n        ElMessage.success('成绩信息已保存');\n        this.originalStudents = this.students.map(student => ({\n          ...student\n        })); // 更新备份\n      }).catch(() => {\n        ElMessage.error('保存成绩失败');\n      });\n    },\n    cancelChanges() {\n      // 使用备份重置整个表单\n      this.students = this.originalStudents.map(student => ({\n        ...student\n      }));\n    }\n  }\n};","map":{"version":3,"names":["ElMessage","axios","data","user_id","user_account","cla_id","cou_name","member_count","originalStudents","students","created","$route","query","fetchStudents","methods","goToTeacherGrade","$router","go","body","claTchId","post","then","response","filteredStudents","filter","item","claID","map","stu_id","scoStuId","stu_name","sco_item_1","sco_item_2","sco_item_3","sco_item_4","sco_note","sco_score","length","student","catch","error","console","calculateTotalScore","saveGrades","success","cancelChanges"],"sources":["D:\\vue_project\\test_project\\jiaowusystem2\\src\\views\\main\\tch_specific_grade.vue"],"sourcesContent":["<!--个人信息（老师，学生，教务）-->\r\n<template>\r\n  <div class=\"specific_grade\">\r\n    <el-container>\r\n        <el-header> \r\n          <img src=\"@/assets/2.jpg\" alt=\"Icon\" class=\"badge\"> \r\n          <h3 style=\"margin-right: auto;\">某某学校教师端——我的评分页面</h3>    \r\n          <div class=\"user-info\">  \r\n            <h3>账号：{{ user_account }}</h3>  \r\n            <h3>ID: {{ user_id }}</h3>  \r\n          </div>  \r\n          <el-button type=\"danger\" style=\"float: right;\" @click=\"goToTeacherGrade\">返回</el-button>  \r\n        </el-header>\r\n        <el-main>\r\n          <div class=\"lab\">\r\n           <h3>教学班号：{{ cla_id }}</h3>\r\n           <h3>课程名：{{ cou_name }}</h3> \r\n           <h3>班级人数：{{ member_count }}</h3>\r\n          </div>\r\n          <!-- 打分表格 -->\r\n        <el-table :data=\"students\" style=\"width: 100%\" border height=\"350px\">\r\n          <el-table-column label=\"学号\" prop=\"stu_id\" width=\"100px\"></el-table-column>\r\n          <el-table-column label=\"姓名\" prop=\"stu_name\" width=\"150px\"></el-table-column>\r\n          \r\n          <!-- 评分项列-->\r\n          <el-table-column label=\"评分项1\" prop=\"sco_item_1\">\r\n            <template v-slot=\"scope\">\r\n              <el-input-number v-model=\"scope.row.sco_item_1\" :min=\"0\" :max=\"100\" label=\"评分项1\"></el-input-number>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column label=\"评分项2\" prop=\"sco_item_2\">\r\n            <template v-slot=\"scope\">\r\n              <el-input-number v-model=\"scope.row.sco_item_2\" :min=\"0\" :max=\"100\" label=\"评分项2\"></el-input-number>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column label=\"评分项3\" prop=\"sco_item_3\">\r\n            <template v-slot=\"scope\">\r\n              <el-input-number v-model=\"scope.row.sco_item_3\" :min=\"0\" :max=\"100\" label=\"评分项3\"></el-input-number>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column label=\"评分项4\" prop=\"sco_item_4\">\r\n            <template v-slot=\"scope\">\r\n              <el-input-number v-model=\"scope.row.sco_item_4\" :min=\"0\" :max=\"100\" label=\"评分项4\"></el-input-number>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <!-- 备注列 -->\r\n          <el-table-column label=\"备注\" prop=\"sco_note\">\r\n            <template v-slot=\"scope\">\r\n              <el-input v-model=\"scope.row.sco_note\" style=\"width: 160px\" :autosize=\"{ minRows: 2, maxRows: 4 }\" type=\"textarea\" placeholder=\"Please input\"/>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <!-- 总分列 -->\r\n          <el-table-column label=\"总分\" prop=\"sco_score\">\r\n            <template v-slot=\"scope\">\r\n              <span>{{ calculateTotalScore(scope.row) }}</span>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!--保存成绩按钮以及取消按钮-->\r\n        <div class=\"foot_button\">\r\n          <el-button type=\"primary\" size=\"large\" style=\"width: 200px; height: 50px; font-size: 18px;\" @click=\"saveGrades\">保存成绩</el-button>\r\n          <el-button size=\"large\" style=\"width: 200px; height: 50px; font-size: 18px;\" @click=\"cancelChanges\">取消</el-button>\r\n        </div>\r\n        </el-main>\r\n    </el-container>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {  \r\n    return {    \r\n      user_id: \"\",  \r\n      user_account: \"\",\r\n      cla_id: 0,\r\n      cou_name: \"\",\r\n      member_count: 0,\r\n      originalStudents: [], // 用于存储初始状态的备份\r\n      students: [] // 用于动态存储后端返回的学生数据\r\n    };\r\n  },\r\n  created() {\r\n    // 从查询参数中获取 id 和账号\r\n    this.user_id = this.$route.query.user_id;\r\n    this.user_account = this.$route.query.user_account;\r\n    this.cla_id = this.$route.query.cla_id;\r\n    this.cou_name = this.$route.query.cou_name;\r\n\r\n    // 从后端获取学生数据\r\n    this.fetchStudents();\r\n  },\r\n  methods: {\r\n    goToTeacherGrade() {\r\n      this.$router.go(-1); // 返回上一页\r\n    },\r\n    // 从后端获取学生数据并过滤\r\n    fetchStudents() {\r\n      const body = { claTchId: this.user_id }; // 将 user_id 作为 claTchId 传递到后端\r\n      axios.post('http://localhost:8080/tch/studentGrade/conditionSearch2', body)\r\n        .then(response => {\r\n          const data = response.data;\r\n\r\n          // 过滤符合当前 cla_id 的学生\r\n          const filteredStudents = data.filter(item => item.claID === this.cla_id);\r\n\r\n          // 映射后端返回数据到表格格式\r\n          this.students = filteredStudents.map(item => ({\r\n            stu_id: item.scoStuId, // 学号\r\n            stu_name: '', // 姓名为空\r\n            sco_item_1: null, // 评分项1为空\r\n            sco_item_2: null, // 评分项2为空\r\n            sco_item_3: null, // 评分项3为空\r\n            sco_item_4: null, // 评分项4为空\r\n            sco_note: '', // 备注为空\r\n            sco_score: 0 // 总分初始化为 0\r\n          }));\r\n\r\n          this.member_count = this.students.length; // 更新班级人数\r\n          this.originalStudents = this.students.map(student => ({ ...student })); // 备份原始数据\r\n        })\r\n        .catch(error => {\r\n          console.error('获取学生数据失败：', error);\r\n        });\r\n    },\r\n    // 计算每个学生的总分\r\n    calculateTotalScore(student) {\r\n      return (\r\n        (student.sco_item_1 || 0 +\r\n          student.sco_item_2 || 0 +\r\n          student.sco_item_3 || 0 +\r\n          student.sco_item_4 || 0) /\r\n        4\r\n      );\r\n    },\r\n    saveGrades() {\r\n      // 假设需要将学生成绩保存到后端\r\n      axios.post('http://localhost:8080/tch/studentGrade/saveGrades', this.students)\r\n        .then(() => {\r\n          ElMessage.success('成绩信息已保存');\r\n          this.originalStudents = this.students.map(student => ({ ...student })); // 更新备份\r\n        })\r\n        .catch(() => {\r\n          ElMessage.error('保存成绩失败');\r\n        });\r\n    },\r\n    cancelChanges() {\r\n      // 使用备份重置整个表单\r\n      this.students = this.originalStudents.map(student => ({ ...student }));\r\n    },\r\n  },\r\n};\r\n\r\n</script>\r\n\r\n<style lang='stylus' scoped>\r\nhtml, body {  \r\n  height: 100%; /* 设置html和body的高度为100% */  \r\n  margin: 0; /* 去掉默认的margin */  \r\n  overflow: hidden; /* 隐藏body的滚动条 */  \r\n}  \r\n\r\n.el-container {  \r\n  display: flex;  \r\n  flex-direction: column;  \r\n  height: 100%; /* 设置容器高度为100% */  \r\n}  \r\n\r\n.el-header {  \r\n  position: fixed;  \r\n  top: 0;  \r\n  left: 0;  \r\n  right: 0;  \r\n  background-color: var(--el-color-primary-light-3);  \r\n  color: black;  \r\n  height: 12%;   \r\n  z-index: 1000;  \r\n  display: flex;  \r\n  align-items: center;  \r\n  justify-content: space-between;  \r\n  padding: 0 20px;  \r\n}  \r\n.specific_grade {  \r\n  height: 100%;  \r\n  overflow-y: auto; /* 允许垂直滚动 */  \r\n} \r\n.badge {  \r\n  width: 85px;  \r\n  height: 85px;  \r\n  margin-left: 0;  \r\n  margin-right: 10px;  \r\n  border-radius: 50%;  \r\n}  \r\n\r\n.user-info {  \r\n  margin-left: 20px;   \r\n  margin-right: 50px;   \r\n}  \r\n.lab{\r\n    display: flex;\r\n    gap: 350px;\r\n    justify-content: center;  /* 垂直居中对齐 */\r\n    align-items: center;\r\n    margin-top: 50px;\r\n    font-size: 20px;\r\n}\r\n.el-table th {\r\n  font-weight: bold;  /* 设置表头字体加粗 */\r\n}\r\n.foot_button{\r\n  margin-top: 100px;\r\n  margin-left: 200px;\r\n  display: flex; /* 使用 Flexbox 布局 */\r\n  align-items: center; /* 垂直居中对齐 */\r\n}\r\n.foot_button .el-button {\r\n  margin-left: 200px; /* 按钮之间的间距 */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}