{"ast":null,"code":"export default {\n  data() {\n    return {\n      loginForm: {\n        user_id: \"\",\n        user_account: \"\",\n        password: \"\",\n        role: \"\"\n      },\n      user_id: '',\n      user_account: '',\n      rules: {\n        user_id: [{\n          validator: this.validateID,\n          trigger: 'blur'\n        }],\n        user_account: [{\n          validator: this.validateUserAccount,\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: this.validatePassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    // 从查询参数中获取 ID 和账号  \n    this.user_id = this.$route.query.user_id;\n    this.user_account = this.$route.query.user_account;\n    this.loginForm.user_id = this.user_id;\n    this.loginForm.user_account = this.user_account;\n  },\n  methods: {\n    validateID(rule, value, callback) {\n      if (value === '') {\n        callback(new Error(\"请输入你的ID\"));\n      } else {\n        callback();\n      }\n    },\n    validateUserAccount(rule, value, callback) {\n      if (value === '') {\n        callback(new Error(\"请输入你的账号\"));\n      } else if (value.length < 2) {\n        callback(new Error(\"长度不够\"));\n      } else {\n        callback();\n      }\n    },\n    validatePassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error(\"请输入你的密码\"));\n      } else {\n        callback();\n      }\n    },\n    goToTeacherHome() {\n      this.$router.go(-1);\n    },\n    saveInfo() {\n      // 添加保存信息的逻辑  \n      console.log('信息已保存', this.loginForm);\n    },\n    resetForm() {\n      this.loginForm = {\n        user_id: \"\",\n        user_account: \"\",\n        password: \"\",\n        role: \"\"\n      };\n    }\n  }\n};","map":{"version":3,"names":["data","loginForm","user_id","user_account","password","role","rules","validator","validateID","trigger","validateUserAccount","validatePassword","created","$route","query","methods","rule","value","callback","Error","length","goToTeacherHome","$router","go","saveInfo","console","log","resetForm"],"sources":["D:\\vue_project\\test_project\\jiaowusystem\\src\\views\\main\\tch_change_personal_info.vue"],"sourcesContent":["<template>  \r\n    <div class=\"change_personal_info\">  \r\n      <el-container>  \r\n        <el-header>   \r\n          <img src=\"@/assets/2.jpg\" alt=\"Icon\" class=\"badge\">   \r\n          <h3 style=\"margin-right: auto;\">某某学校教师端——修改个人信息页面</h3>    \r\n          <div class=\"user-info\">  \r\n            <h3>账号：{{ user_account }}</h3>  \r\n            <h3>ID: {{ user_id }}</h3>  \r\n          </div>  \r\n          <el-button type=\"danger\" style=\"float: right;\" @click=\"goToTeacherHome\">返回</el-button>  \r\n        </el-header>  \r\n        <el-main>  \r\n          <el-card style=\"max-width: 800px\" class=\"tch_personal_box-card\">  \r\n            <template #header>  \r\n              <div class=\"card-header\">  \r\n                <span>个人信息</span>  \r\n              </div>  \r\n            </template>  \r\n            <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"rules\" status-icon>  \r\n              <el-form-item label=\"ID:\" label-width=\"80px\" prop=\"user_id\">  \r\n                <el-input v-model=\"loginForm.user_id\" type=\"text\"/>  \r\n              </el-form-item>  \r\n              <el-form-item label=\"账号:\" label-width=\"80px\" prop=\"user_account\">  \r\n                <el-input v-model=\"loginForm.user_account\" type=\"text\"/>  \r\n              </el-form-item>  \r\n              <el-form-item label=\"密码:\" label-width=\"80px\" prop=\"password\">  \r\n                <el-input v-model=\"loginForm.password\" type=\"password\"/>  \r\n              </el-form-item>  \r\n              <el-form-item label=\"角色:\" label-width=\"80px\">  \r\n                <el-radio-group v-model=\"loginForm.role\">  \r\n                  <el-radio label=\"adm\" size=\"large\">教务员</el-radio>  \r\n                  <el-radio label=\"tch\" size=\"large\">教师</el-radio>  \r\n                  <el-radio label=\"stu\" size=\"large\">学生</el-radio>  \r\n                </el-radio-group>  \r\n              </el-form-item>  \r\n              <el-form-item>  \r\n                <div class=\"button-container\">  \r\n                  <el-button type=\"primary\" @click=\"saveInfo\">保存信息</el-button>  \r\n                  <el-button @click=\"resetForm\">清空</el-button>  \r\n                </div>  \r\n              </el-form-item>  \r\n            </el-form>  \r\n          </el-card>  \r\n        </el-main>  \r\n      </el-container>  \r\n    </div>  \r\n  </template>  \r\n  \r\n  <script>  \r\n  export default {  \r\n    data() {  \r\n      return {  \r\n        loginForm: {  \r\n          user_id: \"\",  \r\n          user_account: \"\",  \r\n          password: \"\",  \r\n          role: \"\"  \r\n        },  \r\n        user_id: '',  \r\n        user_account: '',  \r\n        rules: {  \r\n          user_id: [  \r\n            { validator: this.validateID, trigger: 'blur' }  \r\n          ],  \r\n          user_account: [  \r\n            { validator: this.validateUserAccount, trigger: 'blur' }  \r\n          ],  \r\n          password: [  \r\n            { validator: this.validatePassword, trigger: 'blur' }  \r\n          ]  \r\n        }  \r\n      };  \r\n    },  \r\n    created() {  \r\n      // 从查询参数中获取 ID 和账号  \r\n      this.user_id = this.$route.query.user_id;  \r\n      this.user_account = this.$route.query.user_account;  \r\n      this.loginForm.user_id = this.user_id;  \r\n      this.loginForm.user_account = this.user_account;  \r\n    },  \r\n    methods: {  \r\n      validateID(rule, value, callback) {  \r\n        if (value === '') {  \r\n          callback(new Error(\"请输入你的ID\"));  \r\n        } else {  \r\n          callback();  \r\n        }  \r\n      },  \r\n      validateUserAccount(rule, value, callback) {  \r\n        if (value === '') {  \r\n          callback(new Error(\"请输入你的账号\"));  \r\n        } else if (value.length < 2) {  \r\n          callback(new Error(\"长度不够\"));  \r\n        } else {  \r\n          callback();  \r\n        }  \r\n      },  \r\n      validatePassword(rule, value, callback) {  \r\n        if (value === '') {  \r\n          callback(new Error(\"请输入你的密码\"));  \r\n        } else {  \r\n          callback();  \r\n        }  \r\n      },  \r\n      goToTeacherHome() {  \r\n        this.$router.go(-1);  \r\n      },  \r\n      saveInfo() {  \r\n        // 添加保存信息的逻辑  \r\n        console.log('信息已保存', this.loginForm);  \r\n      },  \r\n      resetForm() {  \r\n        this.loginForm = {  \r\n          user_id: \"\",  \r\n          user_account: \"\",  \r\n          password: \"\",  \r\n          role: \"\"  \r\n        };  \r\n      }  \r\n    }  \r\n  }  \r\n  </script>  \r\n  \r\n  <style lang='stylus' scoped>  \r\n  .change_personal_info {  \r\n    .el-container {  \r\n      display: flex;  \r\n      flex-direction: column;  \r\n      height: 100vh; // 设置容器高度为视口高度  \r\n    }  \r\n    .el-header {  \r\n      position: fixed;  \r\n      top: 0;  \r\n      left: 0;  \r\n      right: 0;  \r\n      background-color: var(--el-color-primary-light-3);  \r\n      color: black;  \r\n      height: 12%;  \r\n      z-index: 1000;  \r\n      display: flex;  \r\n      align-items: center;  \r\n      justify-content: space-between;  \r\n      padding: 0 20px;  \r\n    }  \r\n    .user-info {  \r\n      margin-left: 20px; /* 为用户信息添加左边距 */  \r\n      margin-right: 50px; /* 为用户信息添加右边距 */  \r\n    }  \r\n    .badge {  \r\n      width: 85px;  \r\n      height: 85px;  \r\n      margin-left: 0;  \r\n      margin-right: 10px;  \r\n      border-radius: 50%;  \r\n    }  \r\n  }  \r\n  </style>"],"mappings":"AAkDE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,YAAY,EAAE,EAAE;QAChBC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE;MACR,CAAC;MACDH,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBG,KAAK,EAAE;QACLJ,OAAO,EAAE,CACP;UAAEK,SAAS,EAAE,IAAI,CAACC,UAAU;UAAEC,OAAO,EAAE;QAAO,EAC/C;QACDN,YAAY,EAAE,CACZ;UAAEI,SAAS,EAAE,IAAI,CAACG,mBAAmB;UAAED,OAAO,EAAE;QAAO,EACxD;QACDL,QAAQ,EAAE,CACR;UAAEG,SAAS,EAAE,IAAI,CAACI,gBAAgB;UAAEF,OAAO,EAAE;QAAO;MAExD;IACF,CAAC;EACH,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACV,OAAM,GAAI,IAAI,CAACW,MAAM,CAACC,KAAK,CAACZ,OAAO;IACxC,IAAI,CAACC,YAAW,GAAI,IAAI,CAACU,MAAM,CAACC,KAAK,CAACX,YAAY;IAClD,IAAI,CAACF,SAAS,CAACC,OAAM,GAAI,IAAI,CAACA,OAAO;IACrC,IAAI,CAACD,SAAS,CAACE,YAAW,GAAI,IAAI,CAACA,YAAY;EACjD,CAAC;EACDY,OAAO,EAAE;IACPP,UAAUA,CAACQ,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;MAChC,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;MAChC,OAAO;QACLD,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IACDR,mBAAmBA,CAACM,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;MACzC,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;MAChC,OAAO,IAAIF,KAAK,CAACG,MAAK,GAAI,CAAC,EAAE;QAC3BF,QAAQ,CAAC,IAAIC,KAAK,CAAC,MAAM,CAAC,CAAC;MAC7B,OAAO;QACLD,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IACDP,gBAAgBA,CAACK,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;MACtC,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;MAChC,OAAO;QACLD,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IACDG,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT;MACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACzB,SAAS,CAAC;IACtC,CAAC;IACD0B,SAASA,CAAA,EAAG;MACV,IAAI,CAAC1B,SAAQ,GAAI;QACfC,OAAO,EAAE,EAAE;QACXC,YAAY,EAAE,EAAE;QAChBC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE;MACR,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}