{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = {\n  class: \"mb-2 ml-4\"\n};\nconst _hoisted_3 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    style: {\n      \"max-width\": \"480px\"\n    },\n    class: \"box-card\"\n  }, {\n    header: _withCtx(() => _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"span\", null, \"教务系统\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_tabs, {\n      modelValue: $data.currentIndex,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.currentIndex = $event),\n      stretch: \"\",\n      class: \"demo-tabs\",\n      onTabClick: $options.handleTabsClick\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n        label: \"登录\",\n        name: \"login\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          ref: \"loginForm\",\n          model: $data.loginForm,\n          rules: $data.rules,\n          \"status-icon\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"账号:\",\n            \"label-width\": \"80px\",\n            prop: \"user_account\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $data.loginForm.user_account,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.loginForm.user_account = $event),\n              type: \"text\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"密码:\",\n            \"label-width\": \"80px\",\n            prop: \"password\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $data.loginForm.password,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.loginForm.password = $event),\n              type: \"password\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_radio_group, {\n              modelValue: $data.loginForm.role,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.loginForm.role = $event)\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_radio, {\n                label: \"adm\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"教务员\")])),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_radio, {\n                label: \"tch\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"教师\")])),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_radio, {\n                label: \"stu\",\n                size: \"large\"\n              }, {\n                default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"学生\")])),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: _cache[3] || (_cache[3] = $event => $options.submitForm('loginForm'))\n            }, {\n              default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"登录\")])),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_el_button, {\n              onClick: _cache[4] || (_cache[4] = $event => $options.clearForm('loginForm'))\n            }, {\n              default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"清空\")])),\n              _: 1 /* STABLE */\n            })])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"onTabClick\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","style","header","_withCtx","_cache","_createElementVNode","default","_component_el_tabs","modelValue","$data","currentIndex","$event","stretch","onTabClick","$options","handleTabsClick","_component_el_tab_pane","label","name","_component_el_form","ref","model","loginForm","rules","_component_el_form_item","prop","_component_el_input","user_account","type","_","password","_hoisted_2","_component_el_radio_group","role","_component_el_radio","size","_createTextVNode","_hoisted_3","_component_el_button","onClick","submitForm","clearForm"],"sources":["D:\\vue_project\\test_project\\jiaowusystem2\\src\\views\\login_interface.vue"],"sourcesContent":["<!--注册界面（全体用户）-->\r\n<template>  \r\n  <div class=\"login\">  \r\n      <el-card style=\"max-width: 480px\" class=\"box-card\">  \r\n          <template #header>  \r\n              <div class=\"card-header\">  \r\n                  <span>教务系统</span>  \r\n              </div>  \r\n          </template>  \r\n          <el-tabs v-model=\"currentIndex\" stretch class=\"demo-tabs\" @tab-click=\"handleTabsClick\">  \r\n              <el-tab-pane label=\"登录\" name=\"login\">\r\n                  <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"rules\" status-icon >\r\n                      \r\n                      <el-form-item label=\"账号:\" label-width=\"80px\" prop=\"user_account\">\r\n                          <el-input v-model=\"loginForm.user_account\" type=\"text\"/>\r\n                      </el-form-item>\r\n                      <el-form-item label=\"密码:\" label-width=\"80px\" prop=\"password\">\r\n                          <el-input v-model=\"loginForm.password\" type=\"password\"/>\r\n                      </el-form-item>\r\n                      <el-form-item>\r\n                        <div class=\"mb-2 ml-4\">\r\n                           <el-radio-group v-model=\"loginForm.role\">\r\n                              <el-radio label=\"adm\" size=\"large\">教务员</el-radio>\r\n                              <el-radio label=\"tch\" size=\"large\">教师</el-radio>\r\n                              <el-radio label=\"stu\" size=\"large\">学生</el-radio>\r\n                            </el-radio-group>\r\n                        </div>\r\n                      </el-form-item>\r\n                      <el-form-item>\r\n                          <div class=\"button-container\">\r\n                              <el-button type=\"primary\" @click=\"submitForm('loginForm')\">登录</el-button>\r\n                              <el-button @click=\"clearForm('loginForm')\">清空</el-button>\r\n                          </div>\r\n                      </el-form-item>\r\n                  </el-form>\r\n              </el-tab-pane>        \r\n              \r\n          </el-tabs>  \r\n      </el-card>  \r\n  </div>  \r\n</template>\r\n\r\n<script>\r\n\r\n//import api from '../api';\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus'; \r\nexport default {\r\n  data() {\r\n      //验证规则\r\n      var validateID = (rule, value, callback) =>{\r\n          if(value === ''){\r\n              callback(new Error(\"请输入你的id\"))\r\n          }\r\n          else{\r\n              callback();\r\n          }\r\n      }\r\n      var validateUserAccount = (rule, value, callback) =>{\r\n          if(value === ''){\r\n              callback(new Error(\"请输入你的账号\"))\r\n          }else if(value.length<2){\r\n              callback(new Error(\"长度不够\"))\r\n          }\r\n          else{\r\n              callback();\r\n          }\r\n      }\r\n      var validatePassWord = (rule, value, callback) =>{\r\n          if(value === ''){\r\n              callback(new Error(\"请输入你的密码\"))\r\n          }\r\n          else{\r\n              callback();\r\n          }\r\n      }\r\n      var validateConfigurePassWord = (rule, value, callback) =>{\r\n          if(value === ''){\r\n              callback(new Error(\"请输入密码\"))\r\n          }else if(value !== this.registerForm.password){\r\n              callback(new Error(\"两次密码不一致\"))\r\n          }\r\n          else{\r\n              callback();\r\n          }\r\n      }\r\n      return {\r\n          currentIndex:\"login\",\r\n          loginForm:{\r\n              user_id:\"\",\r\n              user_account:\"\",\r\n              password:\"\",\r\n              role:\"\",\r\n          },\r\n          registerForm:{\r\n              user_account:\"\",\r\n              password:\"\",\r\n              configurePassword:\"\",\r\n              email:\"\"\r\n          },\r\n          activeTab:\"login\",\r\n          rules:{\r\n              user_id:[\r\n                {\r\n                    validator:validateID,\r\n                    trigger: 'blur'\r\n                }\r\n              ],\r\n              user_account:[\r\n                  {\r\n                      validator: validateUserAccount, \r\n                      trigger: 'blur'\r\n                  }\r\n              ],\r\n              password:[\r\n                  {\r\n                      validator: validatePassWord, \r\n                      trigger: 'blur'\r\n                  }\r\n              ],\r\n              configurePassword:[\r\n                  {\r\n                      validator: validateConfigurePassWord,\r\n                      trigger: 'blur'\r\n                  }\r\n              ]\r\n          }\r\n      }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {  \r\n        this.$refs[formName].validate((valid) => {  \r\n            if (valid) {  \r\n                const user_id = this.loginForm.user_id; // 获取ID  \r\n                const user_account = this.loginForm.user_account; // 获取账号  \r\n                const password = this.loginForm.password; // 获取密码  \r\n                let userType; // 根据角色设置用户类型  \r\n                \r\n                // 根据角色设置 userType  \r\n                switch (this.loginForm.role) {  \r\n                    case 'adm':  \r\n                        userType = 0; // 教务员  \r\n                        break;  \r\n                    case 'tch':  \r\n                        userType = 1; // 教师  \r\n                        break;  \r\n                    case 'stu':  \r\n                        userType = 2; // 学生  \r\n                        break;  \r\n                    default:  \r\n                        return; // 没有选择角色，直接返回  \r\n                }  \r\n\r\n                // 发送登录请求到后端  \r\n                axios.post('http://localhost:8080/login', {  \r\n                    username: user_account,  \r\n                    password: password,  \r\n                    usertype: userType  \r\n                })  \r\n                .then(response => {  \r\n                    if (response.status === 200 && response.data === \"Login successful\") {  \r\n                        console.log(\"登录成功:\", response.data);  \r\n                        // 根据身份跳转  \r\n                        switch (this.loginForm.role) {  \r\n                            case 'adm':  \r\n                                this.$router.push({ name: 'adm_interface', query: { user_id, user_account } });  \r\n                                break;  \r\n                            case 'tch':  \r\n                                this.$router.push({ name: 'tch_interface', query: { user_id, user_account } });  \r\n                                break;  \r\n                            case 'stu':  \r\n                                this.$router.push({ name: 'stu_interface', query: { user_id, user_account } });  \r\n                                break;  \r\n                            default:  \r\n                                break;  \r\n                        }  \r\n                    }  \r\n                })  \r\n                .catch(error => {  \r\n                    if (error.response) {  \r\n                        // 检查状态码  \r\n                        if (error.response.status === 401) {  \r\n                            console.error(\"登录失败:\", error.response.data);  \r\n                            // 使用 ElMessage 提示信息 \r\n                            if(response.data === \"Account has been disabled\"){\r\n                                ElMessage.error(\"用户已被停用，请联系教务！\");\r\n                            } else{\r\n                                ElMessage.error(\"无效的用户名或密码，请重试！\");\r\n                            }\r\n                              \r\n                        } else {  \r\n                            // 处理其他错误状态  \r\n                            console.error(\"登录失败:\", error.response.data);  \r\n                            ElMessage.error(\"登录请求失败：\" + error.response.data);  \r\n                        }  \r\n                    } else if (error.request) {  \r\n                        console.error(\"登录失败: 没有收到响应\", error.request);  \r\n                        ElMessage.error(\"服务器没有响应，请稍后再试。\");  \r\n                    } else {  \r\n                        console.error(\"登录失败:\", error.message);  \r\n                        ElMessage.error(\"发生了错误：\" + error.message);  \r\n                    }  \r\n                });  \r\n            } else {  \r\n                return;  \r\n            }  \r\n        });  \r\n    },  \r\n      clearForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n      handleTabsClick(tab){\r\n          this.activeTab=tab.props.name;\r\n      }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang='stylus' scoped>\r\n\r\n.login{\r\n    width: 1200px;\r\n    margin: 0 auto;\r\n    .box-card{\r\n        width: 480px;\r\n        margin-top: 175px;\r\n        margin-left: 350px; \r\n    }\r\n    .el-button{\r\n      margin-right: 100px;\r\n    }\r\n    .button-container{\r\n      margin-left: 100px; /* 调整为你希望的距离 */\r\n      text-align: center;\r\n    }\r\n    .el-radio-group{\r\n      margin-left: 100px;\r\n    }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}