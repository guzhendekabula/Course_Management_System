{"ast":null,"code":"//import api from '../api';\n\nexport default {\n  data() {\n    //验证规则\n    var validateUserName = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error(\"请输入用户名\"));\n      } else if (value.length < 2) {\n        callback(new Error(\"长度不够\"));\n      } else {\n        callback();\n      }\n    };\n    var validatePassWord = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        callback();\n      }\n    };\n    var validateConfigurePassWord = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error(\"请输入密码\"));\n      } else if (value !== this.registerForm.password) {\n        callback(new Error(\"两次密码不一致\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      currentIndex: \"login\",\n      loginForm: {\n        username: \"\",\n        password: \"\"\n      },\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        configurePassword: \"\",\n        email: \"\"\n      },\n      activeTab: \"login\",\n      rules: {\n        username: [{\n          validator: validateUserName,\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: validatePassWord,\n          trigger: 'blur'\n        }],\n        configurePassword: [{\n          validator: validateConfigurePassWord,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (this.activeTab === \"login\") {\n            //登录\n            console.log(this.loginForm);\n          }\n          if (this.activeTab === \"register\") {\n            //注册\n            console.log(this.registerForm);\n          }\n        } else {\n          return;\n        }\n      });\n    },\n    clearForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    handleTabsClick(tab) {\n      this.activeTab = tab.props.name;\n    }\n  }\n};","map":{"version":3,"names":["data","validateUserName","rule","value","callback","Error","length","validatePassWord","validateConfigurePassWord","registerForm","password","currentIndex","loginForm","username","configurePassword","email","activeTab","rules","validator","trigger","methods","submitForm","formName","$refs","validate","valid","console","log","clearForm","resetFields","handleTabsClick","tab","props","name"],"sources":["D:\\vue_project\\test_project\\jiaowusystem\\src\\views\\login_interface.vue"],"sourcesContent":["<!--注册界面（全体用户）-->\n<template>  \n  <div class=\"login\">  \n      <el-card style=\"max-width: 480px\" class=\"box-card\">  \n          <template #header>  \n              <div class=\"card-header\">  \n                  <span>教务系统</span>  \n              </div>  \n          </template>  \n          <el-tabs v-model=\"currentIndex\" stretch class=\"demo-tabs\" @tab-click=\"handleTabsClick\">  \n              <el-tab-pane label=\"登录\" name=\"login\">\n                  <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"rules\" status-icon >\n                      <el-form-item label=\"用户名\" label-width=\"80px\" prop=\"username\">\n                          <el-input v-model=\"loginForm.username\" type=\"text\"/>\n                      </el-form-item>\n                      <el-form-item label=\"密码\" label-width=\"80px\" prop=\"password\">\n                          <el-input v-model=\"loginForm.password\" type=\"password\"/>\n                      </el-form-item>\n                        <el-form-item>\n                            <div class=\"button-container\">\n                                <el-button type=\"primary\" @click=\"submitForm('loginForm')\">登录</el-button>\n                                <el-button @click=\"clearForm('loginForm')\">清空</el-button>\n                            </div>\n                            \n                        </el-form-item>\n                  </el-form>\n              </el-tab-pane>        \n              <el-tab-pane label=\"注册\" name=\"register\">\n                  <el-form ref=\"registerForm\" :model=\"registerForm\" :rules=\"rules\" status-icon >\n                      <el-form-item label=\"用户名\" label-width=\"80px\" prop=\"username\">\n                          <el-input v-model=\"registerForm.username\" type=\"text\"/>\n                      </el-form-item>\n                      <el-form-item label=\"邮箱\" label-width=\"80px\">\n                          <el-input v-model=\"registerForm.email\" type=\"text\"/>\n                      </el-form-item>\n                      <el-form-item label=\"密码\" label-width=\"80px\" prop=\"password\">\n                          <el-input v-model=\"registerForm.password\" type=\"password\"/>\n                      </el-form-item>\n                      <el-form-item label=\"确认密码\" label-width=\"80px\" prop=\"configurePassword\">\n                          <el-input v-model=\"registerForm.configurePassword\" type=\"password\"/>\n                      </el-form-item>\n                      <el-form-item>\n                          <el-button type=\"primary\" @click=\"submitForm('registerForm')\">注册</el-button>\n                      </el-form-item>\n                  </el-form>\n              </el-tab-pane>  \n          </el-tabs>  \n      </el-card>  \n  </div>  \n</template>\n\n<script>\n\n//import api from '../api';\n\nexport default {\n  data() {\n      //验证规则\n      var validateUserName = (rule, value, callback) =>{\n          if(value === ''){\n              callback(new Error(\"请输入用户名\"))\n          }else if(value.length<2){\n              callback(new Error(\"长度不够\"))\n          }\n          else{\n              callback();\n          }\n      }\n      var validatePassWord = (rule, value, callback) =>{\n          if(value === ''){\n              callback(new Error(\"请输入密码\"))\n          }\n          else{\n              callback();\n          }\n      }\n      var validateConfigurePassWord = (rule, value, callback) =>{\n          if(value === ''){\n              callback(new Error(\"请输入密码\"))\n          }else if(value !== this.registerForm.password){\n              callback(new Error(\"两次密码不一致\"))\n          }\n          else{\n              callback();\n          }\n      }\n      return {\n          currentIndex:\"login\",\n          loginForm:{\n              username:\"\",\n              password:\"\"\n          },\n          registerForm:{\n              username:\"\",\n              password:\"\",\n              configurePassword:\"\",\n              email:\"\"\n          },\n          activeTab:\"login\",\n          rules:{\n              username:[\n                  {\n                      validator: validateUserName, \n                      trigger: 'blur'\n                  }\n              ],\n              password:[\n                  {\n                      validator: validatePassWord, \n                      trigger: 'blur'\n                  }\n              ],\n              configurePassword:[\n                  {\n                      validator: validateConfigurePassWord,\n                      trigger: 'blur'\n                  }\n              ]\n          }\n      }\n  },\n  methods: {\n      submitForm(formName){\n          this.$refs[formName].validate((valid) =>{\n              if(valid){\n                  if(this.activeTab===\"login\"){\n                      //登录\n                      console.log(this.loginForm);\n                  }\n                  if(this.activeTab===\"register\"){\n                      //注册\n                      console.log(this.registerForm);\n                  }\n              }else{\n                  return;\n              }\n          })\n      },\n      clearForm(formName) {\n            this.$refs[formName].resetFields();\n        },\n      handleTabsClick(tab){\n          this.activeTab=tab.props.name;\n      }\n  },\n}\n</script>\n\n<style lang='stylus' scoped>\n\n.login{\n  width: 1200px;\n  margin: 0 auto;\n  .box-card{\n      width: 480px;\n      margin: 100px auto;\n  }\n  .el-button{\n    margin-right: 100px;\n  }\n  .button-container{\n    margin-left: 100px; /* 调整为你希望的距离 */\n    text-align: center;\n  }\n}\n</style>\n\n"],"mappings":"AAqDA;;AAEA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACH;IACA,IAAIC,gBAAe,GAAIA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAI;MAC7C,IAAGD,KAAI,KAAM,EAAE,EAAC;QACZC,QAAQ,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC;MAChC,CAAC,MAAK,IAAGF,KAAK,CAACG,MAAM,GAAC,CAAC,EAAC;QACpBF,QAAQ,CAAC,IAAIC,KAAK,CAAC,MAAM,CAAC;MAC9B,OACI;QACAD,QAAQ,CAAC,CAAC;MACd;IACJ;IACA,IAAIG,gBAAe,GAAIA,CAACL,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAI;MAC7C,IAAGD,KAAI,KAAM,EAAE,EAAC;QACZC,QAAQ,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC;MAC/B,OACI;QACAD,QAAQ,CAAC,CAAC;MACd;IACJ;IACA,IAAII,yBAAwB,GAAIA,CAACN,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAI;MACtD,IAAGD,KAAI,KAAM,EAAE,EAAC;QACZC,QAAQ,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC;MAC/B,CAAC,MAAK,IAAGF,KAAI,KAAM,IAAI,CAACM,YAAY,CAACC,QAAQ,EAAC;QAC1CN,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC;MACjC,OACI;QACAD,QAAQ,CAAC,CAAC;MACd;IACJ;IACA,OAAO;MACHO,YAAY,EAAC,OAAO;MACpBC,SAAS,EAAC;QACNC,QAAQ,EAAC,EAAE;QACXH,QAAQ,EAAC;MACb,CAAC;MACDD,YAAY,EAAC;QACTI,QAAQ,EAAC,EAAE;QACXH,QAAQ,EAAC,EAAE;QACXI,iBAAiB,EAAC,EAAE;QACpBC,KAAK,EAAC;MACV,CAAC;MACDC,SAAS,EAAC,OAAO;MACjBC,KAAK,EAAC;QACFJ,QAAQ,EAAC,CACL;UACIK,SAAS,EAAEjB,gBAAgB;UAC3BkB,OAAO,EAAE;QACb,EACH;QACDT,QAAQ,EAAC,CACL;UACIQ,SAAS,EAAEX,gBAAgB;UAC3BY,OAAO,EAAE;QACb,EACH;QACDL,iBAAiB,EAAC,CACd;UACII,SAAS,EAAEV,yBAAyB;UACpCW,OAAO,EAAE;QACb;MAER;IACJ;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAACC,QAAQ,EAAC;MAChB,IAAI,CAACC,KAAK,CAACD,QAAQ,CAAC,CAACE,QAAQ,CAAEC,KAAK,IAAI;QACpC,IAAGA,KAAK,EAAC;UACL,IAAG,IAAI,CAACT,SAAS,KAAG,OAAO,EAAC;YACxB;YACAU,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,SAAS,CAAC;UAC/B;UACA,IAAG,IAAI,CAACI,SAAS,KAAG,UAAU,EAAC;YAC3B;YACAU,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,YAAY,CAAC;UAClC;QACJ,CAAC,MAAI;UACD;QACJ;MACJ,CAAC;IACL,CAAC;IACDmB,SAASA,CAACN,QAAQ,EAAE;MACd,IAAI,CAACC,KAAK,CAACD,QAAQ,CAAC,CAACO,WAAW,CAAC,CAAC;IACtC,CAAC;IACHC,eAAeA,CAACC,GAAG,EAAC;MAChB,IAAI,CAACf,SAAS,GAACe,GAAG,CAACC,KAAK,CAACC,IAAI;IACjC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}