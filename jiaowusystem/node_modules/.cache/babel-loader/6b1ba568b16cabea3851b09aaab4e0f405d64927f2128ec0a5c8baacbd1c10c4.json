{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//import api from '../api';\nimport axios from 'axios';\nexport default {\n  data() {\n    //验证规则\n    var validateID = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error(\"请输入你的id\"));\n      } else {\n        callback();\n      }\n    };\n    var validateUserAccount = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error(\"请输入你的账号\"));\n      } else if (value.length < 2) {\n        callback(new Error(\"长度不够\"));\n      } else {\n        callback();\n      }\n    };\n    var validatePassWord = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error(\"请输入你的密码\"));\n      } else {\n        callback();\n      }\n    };\n    var validateConfigurePassWord = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error(\"请输入密码\"));\n      } else if (value !== this.registerForm.password) {\n        callback(new Error(\"两次密码不一致\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      currentIndex: \"login\",\n      loginForm: {\n        user_id: \"\",\n        user_account: \"\",\n        password: \"\",\n        role: \"\"\n      },\n      registerForm: {\n        user_account: \"\",\n        password: \"\",\n        configurePassword: \"\",\n        email: \"\"\n      },\n      activeTab: \"login\",\n      rules: {\n        user_id: [{\n          validator: validateID,\n          trigger: 'blur'\n        }],\n        user_account: [{\n          validator: validateUserAccount,\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: validatePassWord,\n          trigger: 'blur'\n        }],\n        configurePassword: [{\n          validator: validateConfigurePassWord,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          const user_id = this.loginForm.user_id; // 获取ID  \n          const user_account = this.loginForm.user_account; // 获取账号  \n          const password = this.loginForm.password; // 获取密码  \n          let userType; // 根据角色设置用户类型  \n\n          // 根据角色设置 userType  \n          switch (this.loginForm.role) {\n            case 'adm':\n              userType = 0; // 教务员  \n              break;\n            case 'tch':\n              userType = 1; // 教师  \n              break;\n            case 'stu':\n              userType = 2; // 学生  \n              break;\n            default:\n              return;\n            // 没有选择角色，直接返回  \n          }\n\n          // 发送登录请求到后端  \n          axios.post('http://localhost:8080/login', {\n            username: user_account,\n            password: password,\n            usertype: userType\n          }).then(response => {\n            console.log(response.data);\n            // 根据身份跳转  \n            switch (this.loginForm.role) {\n              case 'adm':\n                this.$router.push({\n                  name: 'adm_interface',\n                  query: {\n                    user_id,\n                    user_account\n                  }\n                });\n                break;\n              case 'tch':\n                this.$router.push({\n                  name: 'tch_interface',\n                  query: {\n                    user_id,\n                    user_account\n                  }\n                });\n                break;\n              case 'stu':\n                this.$router.push({\n                  name: 'stu_interface',\n                  query: {\n                    user_id,\n                    user_account\n                  }\n                });\n                break;\n              default:\n                break;\n            }\n          }).catch(error => {\n            console.error(\"登录失败:\", error.response.data);\n            // 可以在这里添加错误提示  \n          });\n        } else {\n          return;\n        }\n      });\n    },\n    clearForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    handleTabsClick(tab) {\n      this.activeTab = tab.props.name;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","validateID","rule","value","callback","Error","validateUserAccount","length","validatePassWord","validateConfigurePassWord","registerForm","password","currentIndex","loginForm","user_id","user_account","role","configurePassword","email","activeTab","rules","validator","trigger","methods","submitForm","formName","$refs","validate","valid","userType","post","username","usertype","then","response","console","log","$router","push","name","query","catch","error","clearForm","resetFields","handleTabsClick","tab","props"],"sources":["D:\\vue_project\\test_project\\jiaowusystem\\src\\views\\login_interface.vue"],"sourcesContent":["<!--注册界面（全体用户）-->\n<template>  \n  <div class=\"login\">  \n      <el-card style=\"max-width: 480px\" class=\"box-card\">  \n          <template #header>  \n              <div class=\"card-header\">  \n                  <span>教务系统</span>  \n              </div>  \n          </template>  \n          <el-tabs v-model=\"currentIndex\" stretch class=\"demo-tabs\" @tab-click=\"handleTabsClick\">  \n              <el-tab-pane label=\"登录\" name=\"login\">\n                  <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"rules\" status-icon >\n                      <el-form-item label=\"id:\" label-width=\"80px\" prop=\"user_id\">\n                          <el-input v-model=\"loginForm.user_id\" type=\"text\"/>\n                      </el-form-item>\n                      <el-form-item label=\"账号:\" label-width=\"80px\" prop=\"user_account\">\n                          <el-input v-model=\"loginForm.user_account\" type=\"text\"/>\n                      </el-form-item>\n                      <el-form-item label=\"密码:\" label-width=\"80px\" prop=\"password\">\n                          <el-input v-model=\"loginForm.password\" type=\"password\"/>\n                      </el-form-item>\n                      <el-form-item>\n                        <div class=\"mb-2 ml-4\">\n                           <el-radio-group v-model=\"loginForm.role\">\n                              <el-radio label=\"adm\" size=\"large\">教务员</el-radio>\n                              <el-radio label=\"tch\" size=\"large\">教师</el-radio>\n                              <el-radio label=\"stu\" size=\"large\">学生</el-radio>\n                            </el-radio-group>\n                        </div>\n                      </el-form-item>\n                      <el-form-item>\n                          <div class=\"button-container\">\n                              <el-button type=\"primary\" @click=\"submitForm('loginForm')\">登录</el-button>\n                              <el-button @click=\"clearForm('loginForm')\">清空</el-button>\n                          </div>\n                      </el-form-item>\n                  </el-form>\n              </el-tab-pane>        \n              <el-tab-pane label=\"注册\" name=\"register\">\n                  <el-form ref=\"registerForm\" :model=\"registerForm\" :rules=\"rules\" status-icon >\n                      <el-form-item label=\"用户名\" label-width=\"80px\" prop=\"user_account\">\n                          <el-input v-model=\"registerForm.username\" type=\"text\"/>\n                      </el-form-item>\n                      <el-form-item label=\"邮箱\" label-width=\"80px\">\n                          <el-input v-model=\"registerForm.email\" type=\"text\"/>\n                      </el-form-item>\n                      <el-form-item label=\"密码\" label-width=\"80px\" prop=\"password\">\n                          <el-input v-model=\"registerForm.password\" type=\"password\"/>\n                      </el-form-item>\n                      <el-form-item label=\"确认密码\" label-width=\"80px\" prop=\"configurePassword\">\n                          <el-input v-model=\"registerForm.configurePassword\" type=\"password\"/>\n                      </el-form-item>\n                      <el-form-item>\n                          <el-button type=\"primary\" @click=\"submitForm('registerForm')\">注册</el-button>\n                      </el-form-item>\n                  </el-form>\n              </el-tab-pane>  \n          </el-tabs>  \n      </el-card>  \n  </div>  \n</template>\n\n<script>\n\n//import api from '../api';\nimport axios from 'axios';\nexport default {\n  data() {\n      //验证规则\n      var validateID = (rule, value, callback) =>{\n          if(value === ''){\n              callback(new Error(\"请输入你的id\"))\n          }\n          else{\n              callback();\n          }\n      }\n      var validateUserAccount = (rule, value, callback) =>{\n          if(value === ''){\n              callback(new Error(\"请输入你的账号\"))\n          }else if(value.length<2){\n              callback(new Error(\"长度不够\"))\n          }\n          else{\n              callback();\n          }\n      }\n      var validatePassWord = (rule, value, callback) =>{\n          if(value === ''){\n              callback(new Error(\"请输入你的密码\"))\n          }\n          else{\n              callback();\n          }\n      }\n      var validateConfigurePassWord = (rule, value, callback) =>{\n          if(value === ''){\n              callback(new Error(\"请输入密码\"))\n          }else if(value !== this.registerForm.password){\n              callback(new Error(\"两次密码不一致\"))\n          }\n          else{\n              callback();\n          }\n      }\n      return {\n          currentIndex:\"login\",\n          loginForm:{\n              user_id:\"\",\n              user_account:\"\",\n              password:\"\",\n              role:\"\",\n          },\n          registerForm:{\n              user_account:\"\",\n              password:\"\",\n              configurePassword:\"\",\n              email:\"\"\n          },\n          activeTab:\"login\",\n          rules:{\n              user_id:[\n                {\n                    validator:validateID,\n                    trigger: 'blur'\n                }\n              ],\n              user_account:[\n                  {\n                      validator: validateUserAccount, \n                      trigger: 'blur'\n                  }\n              ],\n              password:[\n                  {\n                      validator: validatePassWord, \n                      trigger: 'blur'\n                  }\n              ],\n              configurePassword:[\n                  {\n                      validator: validateConfigurePassWord,\n                      trigger: 'blur'\n                  }\n              ]\n          }\n      }\n  },\n  methods: {\n    submitForm(formName) {  \n        this.$refs[formName].validate((valid) => {  \n            if (valid) {  \n                const user_id = this.loginForm.user_id; // 获取ID  \n                const user_account = this.loginForm.user_account; // 获取账号  \n                const password = this.loginForm.password; // 获取密码  \n                let userType; // 根据角色设置用户类型  \n                \n                // 根据角色设置 userType  \n                switch (this.loginForm.role) {  \n                    case 'adm':  \n                        userType = 0; // 教务员  \n                        break;  \n                    case 'tch':  \n                        userType = 1; // 教师  \n                        break;  \n                    case 'stu':  \n                        userType = 2; // 学生  \n                        break;  \n                    default:  \n                        return; // 没有选择角色，直接返回  \n                }  \n\n                // 发送登录请求到后端  \n                axios.post('http://localhost:8080/login', {  \n                    username: user_account,  \n                    password: password,  \n                    usertype: userType  \n                })  \n                .then(response => {  \n                    console.log(response.data);  \n                    // 根据身份跳转  \n                    switch (this.loginForm.role) {  \n                        case 'adm':  \n                            this.$router.push({ name: 'adm_interface', query: { user_id, user_account } });  \n                            break;  \n                        case 'tch':  \n                            this.$router.push({ name: 'tch_interface', query: { user_id, user_account } });  \n                            break;  \n                        case 'stu':  \n                            this.$router.push({ name: 'stu_interface', query: { user_id, user_account } });  \n                            break;  \n                        default:  \n                            break;  \n                    }  \n                })  \n                .catch(error => {  \n                    console.error(\"登录失败:\", error.response.data);  \n                    // 可以在这里添加错误提示  \n                });  \n            } else {  \n                return;  \n            }  \n        });  \n    },  \n      clearForm(formName) {\n            this.$refs[formName].resetFields();\n        },\n      handleTabsClick(tab){\n          this.activeTab=tab.props.name;\n      }\n  },\n}\n</script>\n\n<style lang='stylus' scoped>\n\n.login{\n    width: 1200px;\n    margin: 0 auto;\n    .box-card{\n        width: 480px;\n        margin-top: 175px;\n        margin-left: 350px; \n    }\n    .el-button{\n      margin-right: 100px;\n    }\n    .button-container{\n      margin-left: 100px; /* 调整为你希望的距离 */\n      text-align: center;\n    }\n    .el-radio-group{\n      margin-left: 100px;\n    }\n}\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}