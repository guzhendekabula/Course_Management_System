{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      user_id: '',\n      user_account: '',\n      user_name: '',\n      isPersonalInfoRoute: false // 用于控制显示内容  \n    };\n  },\n  created() {\n    this.user_id = this.$route.query.user_id;\n    this.user_account = this.$route.query.user_account;\n    this.fetchUserInfo(); // 在组件创建时调用接口获取用户信息 \n    this.checkRoute(this.$route); // 确认当前路由  \n  },\n  watch: {\n    '$route'(to) {\n      this.checkRoute(to); // 监听路由变化  \n    }\n  },\n  methods: {\n    fetchUserInfo() {\n      const url = `http://localhost:8080/personalPage/tch/${this.user_account}`;\n      axios.get(url).then(response => {\n        const data = response.data;\n        this.user_id = data.tch_id; // 更新 user_id 为 tch_id\n        this.user_name = data.tch_name; // 设置 user_name 为 tch_name\n      }).catch(error => {\n        console.error('获取用户信息失败:', error);\n      });\n    },\n    checkRoute(route) {\n      // 检查当前路由是否是需要单独显示的页面  \n      const personalInfoRoutes = ['tch_personal_info_interface', 'tch_grade', 'tch_approval_form_interface', 'tch_evaluation_interface', 'tch_course_score_interface', 'tch_change_personal_info', 'tch_specific_grade', 'tch_editing_course', 'tch_apply_course'];\n      this.isPersonalInfoRoute = personalInfoRoutes.includes(route.name);\n    },\n    goToPersonalInfo() {\n      this.$router.push({\n        name: 'tch_personal_info_interface',\n        query: {\n          user_id: this.user_id,\n          user_account: this.user_account\n        }\n      });\n    },\n    logout() {\n      this.$router.push({\n        name: 'login_interface'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user_id","user_account","user_name","isPersonalInfoRoute","created","$route","query","fetchUserInfo","checkRoute","watch","to","methods","url","get","then","response","tch_id","tch_name","catch","error","console","route","personalInfoRoutes","includes","name","goToPersonalInfo","$router","push","logout"],"sources":["D:\\vue_project\\test_project\\jiaowusystem2\\src\\views\\main\\tch_interface.vue"],"sourcesContent":["<template>  \r\n  <div class=\"tch_interface\">  \r\n    <div v-if=\"isPersonalInfoRoute\">  \r\n      <router-view></router-view> <!-- 仅渲染子组件 -->  \r\n    </div>  \r\n    <div v-if=\"!isPersonalInfoRoute\" class=\"common-layout\">  \r\n      <el-container>  \r\n        <el-header>  \r\n          <img src=\"@/assets/2.jpg\" alt=\"Icon\" class=\"badge\">\r\n          <h3 style=\"margin-right: auto;\">教师主页面</h3>  \r\n          <el-button @click=\"goToPersonalInfo\">个人信息</el-button>  \r\n          <div class=\"user-info\">  \r\n            <h3>账号：{{ user_account }}</h3>  \r\n            <h3>ID: {{ user_name }}</h3>  \r\n          </div>  \r\n          <el-button type=\"danger\" style=\"float: right;\" @click=\"logout\">退出</el-button>  \r\n        </el-header>  \r\n        <el-main>  \r\n          <div class=\"icons-container\">  \r\n            \r\n            <img src=\"@/assets/1.png\" alt=\"Icon\" class=\"icon\">  \r\n            <img src=\"@/assets/1.png\" alt=\"Icon\" class=\"icon\">  \r\n            <img src=\"@/assets/1.png\" alt=\"Icon\" class=\"icon\">  \r\n            <img src=\"@/assets/1.png\" alt=\"Icon\" class=\"icon\">  \r\n          </div>  \r\n           \r\n          <router-link class=\"link-item\" :to=\"{ path: '/tch_interface/tch_grade', query: { user_id: user_id, user_account: user_account } }\">我的评分</router-link> \r\n          <router-link class=\"link-item\" :to=\"{ path: '/tch_interface/tch_approval_form_interface', query: { user_id: user_id, user_account: user_account } }\">我的课程</router-link>  \r\n          <router-link class=\"link-item\" to=\"/tch_interface/tch_evaluation_interface\">评教结果</router-link>  \r\n          <router-link class=\"link-item\" to=\"/tch_interface/tch_course_score_interface\">班级成绩</router-link>  \r\n          <router-view></router-view>  \r\n        </el-main>  \r\n      </el-container>  \r\n    </div>  \r\n  </div>  \r\n</template>  \r\n\r\n<script> \r\nimport axios from 'axios'; \r\nexport default {  \r\n  data() {  \r\n    return {  \r\n      user_id: '',  \r\n      user_account: '',\r\n      user_name: '',  \r\n      isPersonalInfoRoute: false  // 用于控制显示内容  \r\n    };  \r\n  },  \r\n  created() {  \r\n    this.user_id = this.$route.query.user_id;  \r\n    this.user_account = this.$route.query.user_account; \r\n    this.fetchUserInfo(); // 在组件创建时调用接口获取用户信息 \r\n    this.checkRoute(this.$route); // 确认当前路由  \r\n  },  \r\n  watch: {  \r\n    '$route'(to) {  \r\n      this.checkRoute(to); // 监听路由变化  \r\n    }  \r\n  },  \r\n  methods: {  \r\n    fetchUserInfo() {\r\n      const url = `http://localhost:8080/personalPage/tch/${this.user_account}`;\r\n      axios.get(url)\r\n        .then(response => {\r\n          const data = response.data;\r\n          this.user_id = data.tch_id; // 更新 user_id 为 tch_id\r\n          this.user_name = data.tch_name; // 设置 user_name 为 tch_name\r\n        })\r\n        .catch(error => {\r\n          console.error('获取用户信息失败:', error);\r\n        });\r\n    },\r\n    checkRoute(route) {  \r\n      // 检查当前路由是否是需要单独显示的页面  \r\n      const personalInfoRoutes = [  \r\n        'tch_personal_info_interface',   \r\n           \r\n        'tch_grade',   \r\n        'tch_approval_form_interface',   \r\n        'tch_evaluation_interface',   \r\n        'tch_course_score_interface', \r\n        'tch_change_personal_info',\r\n        'tch_specific_grade',\r\n        'tch_editing_course',\r\n        'tch_apply_course'\r\n      ];  \r\n      this.isPersonalInfoRoute = personalInfoRoutes.includes(route.name);  \r\n    },  \r\n    goToPersonalInfo() {  \r\n      this.$router.push({   \r\n        name: 'tch_personal_info_interface',  \r\n        query: {  \r\n          user_id: this.user_id,  \r\n          user_account: this.user_account  \r\n        }  \r\n      });  \r\n    },  \r\n    logout() {  \r\n      this.$router.push({ name: 'login_interface' });  \r\n    }  \r\n  }  \r\n}  \r\n</script>  \r\n\r\n<style lang='stylus' scoped>\r\n\r\n.tch_interface{\r\n  .el-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh; // 设置容器高度为视口高度\r\n  }\r\n  .el-header{\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: var(--el-color-primary-light-3);\r\n    color: black;\r\n    height: 12%;\r\n    z-index: 1000;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 20px;\r\n  }\r\n  .el-main{\r\n    flex-grow: 1;\r\n    margin-top: 2.5%;\r\n    background-color: white;\r\n    color: black;\r\n    height: 80vh;\r\n    overflow-y: auto;\r\n  }\r\n  .user-info {\r\n    margin-left: 20px; /* 为用户信息添加左边距 */\r\n    margin-right: 50px; /* 为用户信息添加右边距 */\r\n  }\r\n  .link-item{\r\n    margin: 0 90px;\r\n    font-size: 18px;\r\n  }\r\n  .icons-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 20px; // 为图片容器和链接容器之间添加间距\r\n  }\r\n  .icon{\r\n    width: 120px; // 图片宽度\r\n    height: 120px; // 图片高度\r\n    margin: 0 66px; // 图片之间的间距\r\n  }\r\n  .badge{\r\n    width: 85px;\r\n    height: 85px;\r\n    margin-left: 0;\r\n    margin-right: 10px;\r\n    border-radius: 50%;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":";AAsCA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,EAAE;MACbC,mBAAmB,EAAE,KAAI,CAAG;IAC9B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,OAAM,GAAI,IAAI,CAACK,MAAM,CAACC,KAAK,CAACN,OAAO;IACxC,IAAI,CAACC,YAAW,GAAI,IAAI,CAACI,MAAM,CAACC,KAAK,CAACL,YAAY;IAClD,IAAI,CAACM,aAAa,CAAC,CAAC,EAAE;IACtB,IAAI,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC,EAAE;EAChC,CAAC;EACDI,KAAK,EAAE;IACL,QAAQJ,CAACK,EAAE,EAAE;MACX,IAAI,CAACF,UAAU,CAACE,EAAE,CAAC,EAAE;IACvB;EACF,CAAC;EACDC,OAAO,EAAE;IACPJ,aAAaA,CAAA,EAAG;MACd,MAAMK,GAAE,GAAI,0CAA0C,IAAI,CAACX,YAAY,EAAE;MACzEH,KAAK,CAACe,GAAG,CAACD,GAAG,EACVE,IAAI,CAACC,QAAO,IAAK;QAChB,MAAMhB,IAAG,GAAIgB,QAAQ,CAAChB,IAAI;QAC1B,IAAI,CAACC,OAAM,GAAID,IAAI,CAACiB,MAAM,EAAE;QAC5B,IAAI,CAACd,SAAQ,GAAIH,IAAI,CAACkB,QAAQ,EAAE;MAClC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC,CAAC,CAAC;IACN,CAAC;IACDX,UAAUA,CAACa,KAAK,EAAE;MAChB;MACA,MAAMC,kBAAiB,GAAI,CACzB,6BAA6B,EAE7B,WAAW,EACX,6BAA6B,EAC7B,0BAA0B,EAC1B,4BAA4B,EAC5B,0BAA0B,EAC1B,oBAAoB,EACpB,oBAAoB,EACpB,kBAAiB,CAClB;MACD,IAAI,CAACnB,mBAAkB,GAAImB,kBAAkB,CAACC,QAAQ,CAACF,KAAK,CAACG,IAAI,CAAC;IACpE,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAChBH,IAAI,EAAE,6BAA6B;QACnClB,KAAK,EAAE;UACLN,OAAO,EAAE,IAAI,CAACA,OAAO;UACrBC,YAAY,EAAE,IAAI,CAACA;QACrB;MACF,CAAC,CAAC;IACJ,CAAC;IACD2B,MAAMA,CAAA,EAAG;MACP,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC;QAAEH,IAAI,EAAE;MAAkB,CAAC,CAAC;IAChD;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}