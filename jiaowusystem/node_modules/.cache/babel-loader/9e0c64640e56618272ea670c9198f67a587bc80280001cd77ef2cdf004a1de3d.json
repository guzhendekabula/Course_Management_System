{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      user_role: 'stu',\n      //用户身份\n      name: '',\n      //教务员姓名\n      account: '',\n      //教务员账号\n      adding_info: {\n        user_id: '',\n        user_name: '',\n        user_account: '',\n        //用户账号\n        user_sex: '',\n        user_sch: '',\n        user_grade: 0,\n        user_tel: '',\n        user_status: 1,\n        user_rank: '',\n        new_password: '',\n        confirm_password: '',\n        user_picture: require('@/assets/logo.png')\n      },\n      sch_options: [{\n        value: '软件工程学院',\n        label: '软件工程学院'\n      }, {\n        value: '计算机学院',\n        label: '计算机学院'\n      }, {\n        value: '数学学院',\n        label: '数学学院'\n      }, {\n        value: '物理学院',\n        label: '物理学院'\n      }, {\n        value: '大气学院',\n        label: '大气学院'\n      }, {\n        value: '政务学院',\n        label: '政务学院'\n      }, {\n        value: '海工学院',\n        label: '海工学院'\n      }]\n    };\n  },\n  created() {\n    // 从查询参数中获取 id 和账号\n    this.account = this.$route.query.user_account;\n    this.fetchAdmInfo();\n  },\n  methods: {\n    fetchAdmInfo() {\n      const url = `http://localhost:8080/personalPage/adm/${this.account}`;\n      axios.get(url).then(response => {\n        const data = response.data;\n        this.name = data.adm_name;\n      }).catch(error => {\n        console.error('获取用户信息失败:', error);\n      });\n    },\n    goToHome() {\n      this.$router.go(-1);\n    },\n    resetForm() {\n      this.change_info = {\n        ...this.originalInfo\n      }; // 重置为原始信息 \n    },\n    handleAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isPNG = file.type === 'image/png';\n      const isLimitSize = file.size / 1024 / 1024 < 5; // 限制为5MB以内\n\n      if (!isJPG && !isPNG) {\n        this.$message.error('上传头像只能是 JPG/PNG 格式!');\n        return false;\n      }\n      if (!isLimitSize) {\n        this.$message.error('上传头像大小不能超过 5MB!');\n        return false;\n      }\n\n      // 模拟上传成功，直接更新头像 URL\n      const avatarURL = URL.createObjectURL(file);\n      this.change_info.avatar = avatarURL;\n      this.$message.success('头像上传成功！');\n\n      // 阻止默认上传行为\n      return false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user_role","name","account","adding_info","user_id","user_name","user_account","user_sex","user_sch","user_grade","user_tel","user_status","user_rank","new_password","confirm_password","user_picture","require","sch_options","value","label","created","$route","query","fetchAdmInfo","methods","url","get","then","response","adm_name","catch","error","console","goToHome","$router","go","resetForm","change_info","originalInfo","handleAvatarUpload","file","isJPG","type","isPNG","isLimitSize","size","$message","avatarURL","URL","createObjectURL","avatar","success"],"sources":["D:\\vue_project\\test_project\\jiaowusystem2\\src\\views\\main\\adm_add_user.vue"],"sourcesContent":["<!-- 添加用户 -->\r\n<template>\r\n  <div class=\"add_user_info\">\r\n      <el-container>  \r\n        <el-header> \r\n          <img src=\"@/assets/2.jpg\" alt=\"Icon\" class=\"badge\"> \r\n          <h3 style=\"margin-right: auto;\">某某学校教务员端——添加用户页面</h3>    \r\n          <div class=\"user-info\">  \r\n            <h3>账号：{{ account }}</h3>  \r\n            <h3>姓名: {{ name }}</h3>  \r\n          </div>  \r\n          <el-button type=\"danger\" style=\"float: right;\" @click=\"goToHome\">返回</el-button>  \r\n        </el-header>  \r\n        <el-main>  \r\n          <div class=\"role-selector\">\r\n            <el-radio-group v-model=\"user_role\">\r\n              <el-radio size=\"large\" border label=\"stu\">学生</el-radio>\r\n              <el-radio size=\"large\" border label=\"tch\">教师</el-radio>\r\n              <el-radio size=\"large\" border label=\"adm\">教务员</el-radio>\r\n            </el-radio-group>\r\n          </div>\r\n          <!--添加学生-->\r\n          <div class=\"card-container\">\r\n            <div class=\"avatar-container\">\r\n              <img :src=\"adding_info.user_picture\" alt=\"头像\" class=\"avatar\"> \r\n              <div class=\"avatar-label\">学生头像</div>\r\n              <el-upload\r\n              class=\"upload-avatar\"\r\n              :before-upload=\"handleAvatarUpload\"\r\n              :show-file-list=\"false\"\r\n              >\r\n              <template v-slot:trigger>\r\n                <el-button size=\"large\" type=\"primary\">点击上传头像</el-button>\r\n              </template>\r\n            </el-upload>\r\n            </div>\r\n            <el-card style=\"max-width: 800px\" class=\"adding_personal_box-card\">  \r\n              <template #header>  \r\n                <div class=\"card-header\">  \r\n                  <span>个人信息</span>  \r\n                </div>  \r\n              </template>  \r\n              <el-form ref=\"adding_info\" :model=\"adding_info\" :rules=\"rules\" status-icon>  \r\n                <el-form-item label=\"学生ID:\" label-width=\"120px\">  \r\n                  <span>{{ adding_info.user_id }}</span> <!-- 显示教师ID -->  \r\n                </el-form-item>  \r\n                <el-form-item label=\"姓名:\" label-width=\"120px\">  \r\n                  <span>{{ adding_info.user_name }}</span> <!-- 显示姓名 -->  \r\n                </el-form-item>  \r\n                <el-form-item label=\"性别:\" label-width=\"120px\">  \r\n                  <span>{{ adding_info.user_sex }}</span> <!-- 显示性别 -->  \r\n                </el-form-item>  \r\n                <el-form-item label=\"学院:\" label-width=\"120px\" prop=\"college\">  \r\n                  <el-select v-model=\"adding_info.user_sch\" placeholder=\"Select\" size=\"large\" style=\"width: 240px\">  \r\n                    <el-option v-for=\"item in sch_options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />  \r\n                  </el-select>  \r\n                </el-form-item>  \r\n                <el-form-item label=\"年级:\" label-width=\"120px\">  \r\n                  <span>{{ adding_info.user_grade }}级</span> <!-- 显示年级 -->  \r\n                </el-form-item>  \r\n                <el-form-item label=\"电话:\" label-width=\"120px\" prop=\"tel\">  \r\n                  <el-input v-model=\"adding_info.user_tel\" type=\"text\" size=\"large\" />  \r\n                </el-form-item>  \r\n                <el-form-item label=\"账号:\" label-width=\"120px\">  \r\n                  <span>{{ adding_info.user_account }}</span> <!-- 显示账号 -->  \r\n                </el-form-item>  \r\n                <el-form-item label=\"新密码:\" label-width=\"120px\" prop=\"new_password\">  \r\n                  <el-input v-model=\"adding_info.new_password\" type=\"password\" size=\"large\" />  \r\n                </el-form-item>  \r\n                <el-form-item label=\"确认密码:\" label-width=\"120px\" prop=\"confirm_password\">  \r\n                  <el-input v-model=\"adding_info.confirm_password\" type=\"password\" size=\"large\" />  \r\n                </el-form-item>  \r\n              </el-form>  \r\n              <template #footer>  \r\n                <div class=\"button-container\">  \r\n                  <el-button type=\"primary\" @click=\"saveInfo\" style=\"margin-right: 100px;\">保存信息</el-button>  \r\n                  <el-button @click=\"resetForm('adding_info')\">撤销</el-button>  \r\n                </div>  \r\n              </template>  \r\n            </el-card> \r\n          </div>\r\n          <!--添加教师-->\r\n          \r\n          <!--添加教务员-->\r\n          \r\n        </el-main>  \r\n        <router-view></router-view>\r\n      </el-container>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\n  import axios from 'axios'; \r\nexport default {\r\n  data() {\r\n    return {\r\n      user_role: 'stu', //用户身份\r\n      name: '', //教务员姓名\r\n      account: '', //教务员账号\r\n      adding_info: {  \r\n        user_id: '',\r\n        user_name: '',\r\n        user_account: '', //用户账号\r\n        user_sex: '',\r\n        user_sch: '',\r\n        user_grade: 0,\r\n        user_tel: '',\r\n        user_status: 1,\r\n        user_rank: '',\r\n        new_password: '',\r\n        confirm_password: '',\r\n        user_picture: require('@/assets/logo.png'),\r\n      },\r\n      sch_options: [  \r\n        { value: '软件工程学院', label: '软件工程学院' },  \r\n        { value: '计算机学院', label: '计算机学院' },  \r\n        { value: '数学学院', label: '数学学院' },  \r\n        { value: '物理学院', label: '物理学院' },  \r\n        { value: '大气学院', label: '大气学院' },  \r\n        { value: '政务学院', label: '政务学院' },  \r\n        { value: '海工学院', label: '海工学院' }  \r\n      ], \r\n    };\r\n  },\r\n  created() {\r\n    // 从查询参数中获取 id 和账号\r\n    this.account = this.$route.query.user_account;\r\n    this.fetchAdmInfo();\r\n  },\r\n  methods: {\r\n    fetchAdmInfo() {\r\n      const url = `http://localhost:8080/personalPage/adm/${this.account}`;\r\n      axios.get(url)\r\n        .then(response => {\r\n          const data = response.data; \r\n          this.name = data.adm_name;\r\n        })\r\n        .catch(error => {\r\n          console.error('获取用户信息失败:', error);\r\n        });\r\n    },\r\n    goToHome() {\r\n      this.$router.go(-1);\r\n    },\r\n    resetForm() {  \r\n      this.change_info = { ...this.originalInfo }; // 重置为原始信息 \r\n    },\r\n    handleAvatarUpload(file) {\r\n      const isJPG = file.type === 'image/jpeg';\r\n      const isPNG = file.type === 'image/png';\r\n      const isLimitSize = file.size / 1024 / 1024 < 5; // 限制为5MB以内\r\n\r\n      if (!isJPG && !isPNG) {\r\n        this.$message.error('上传头像只能是 JPG/PNG 格式!');\r\n        return false;\r\n      }\r\n      if (!isLimitSize) {\r\n        this.$message.error('上传头像大小不能超过 5MB!');\r\n        return false;\r\n      }\r\n\r\n      // 模拟上传成功，直接更新头像 URL\r\n      const avatarURL = URL.createObjectURL(file);\r\n      this.change_info.avatar = avatarURL;\r\n      this.$message.success('头像上传成功！');\r\n      \r\n      // 阻止默认上传行为\r\n      return false;\r\n    },\r\n  }\r\n}\r\n</script>\r\n  \r\n<style lang='stylus' scoped>\r\nhtml, body {  \r\n  height: 100%;  \r\n  margin: 0;  \r\n  overflow: hidden; /* 隐藏body的滚动条 */  \r\n}  \r\n\r\n.add_user_info {  \r\n  height: 100%;  \r\n  overflow-y: auto; /* 允许垂直滚动 */  \r\n}  \r\n\r\n.el-container {  \r\n  display: flex;  \r\n  flex-direction: column;  \r\n  height: 100%;  \r\n}  \r\n\r\n.el-header {  \r\n  position: fixed;  \r\n  top: 0;  \r\n  left: 0;  \r\n  right: 0;  \r\n  background-color: var(--el-color-primary-light-3);  \r\n  color: black;  \r\n  height: 12%;   \r\n  z-index: 1000;  \r\n  display: flex;  \r\n  align-items: center;  \r\n  justify-content: space-between;  \r\n  padding: 0 20px;  \r\n}  \r\n\r\n.user-info {  \r\n  margin-left: 20px;  \r\n  margin-right: 50px;  \r\n}  \r\n\r\n.badge {  \r\n  width: 85px;  \r\n  height: 85px;  \r\n  border-radius: 50%;  \r\n}  \r\n\r\n.el-card {  \r\n  margin-left: 250px;  \r\n  margin-top: 50px;  \r\n}  \r\n\r\n.button-container {  \r\n  text-align: center;  \r\n}  \r\n.card-container {  \r\n  display: flex;  \r\n}  \r\n.avatar-container {  \r\n  text-align: center; /* 使标签文本居中对齐 */  \r\n  margin-left: 200px;  \r\n  margin-top: 100px;  \r\n}  \r\n\r\n.avatar-label {  \r\n  margin-top: 10px; /* 标签与头像之间的间距 */  \r\n  font-size: 25px; /* 标签字体大小 */  \r\n  font-weight: bold;  \r\n}  \r\n.avatar {  \r\n  width: 250px; /* 设置头像宽度 */  \r\n  height: 250px; /* 设置头像高度 */  \r\n  border-radius: 50%; /* 使头像为圆形 */  \r\n  margin-bottom: 20px; /* 调整头像与按钮的间距 */\r\n}  \r\n.adding_personal_box-card {  \r\n  margin-left: 100px;  \r\n  width: 700px;  \r\n}  \r\n.upload-avatar {\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n}\r\n.upload-avatar .el-button {\r\n  border-radius: 5px; /* 调整按钮的样式 */\r\n  padding: 8px 20px; /* 调整按钮大小 */\r\n}\r\n.role-selector{\r\n  margin-top: 50px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}